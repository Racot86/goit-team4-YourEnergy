{"version":3,"file":"task-manager-M1fNHe4L.js","sources":["../../src/js/task-manager.js"],"sourcesContent":["const IMGBB_API_KEY = '1aad3d84ed2ee332d869dd74a8b19d64'; // Замените на ваш API ключ\n\nclass Notification {\n    static show(message, type = 'success', actions = null) {\n        const notification = document.createElement('div');\n        notification.className = `notification ${type}`;\n        notification.style.cssText = `\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 15px 20px;\n            border-radius: 4px;\n            background: ${type === 'success' ? '#4CAF50' : '#f44336'};\n            color: white;\n            z-index: 1000;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n            animation: slideIn 0.3s ease;\n            min-width: 200px;\n            max-width: 400px;\n        `;\n\n        notification.innerHTML = `\n            <div class=\"notification-content\" style=\"margin-bottom: ${actions ? '10px' : '0'}\">\n                ${message}\n            </div>\n        `;\n\n        if (actions) {\n            const actionsDiv = document.createElement('div');\n            actionsDiv.style.cssText = `\n                display: flex;\n                gap: 10px;\n                margin-top: 10px;\n            `;\n\n            actions.forEach(action => {\n                const button = document.createElement('button');\n                button.textContent = action.text;\n                button.style.cssText = `\n                    padding: 5px 10px;\n                    border: none;\n                    border-radius: 3px;\n                    background: rgba(255,255,255,0.2);\n                    color: white;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                `;\n                button.onmouseover = () => {\n                    button.style.background = 'rgba(255,255,255,0.3)';\n                };\n                button.onmouseout = () => {\n                    button.style.background = 'rgba(255,255,255,0.2)';\n                };\n                button.onclick = () => {\n                    action.callback();\n                    notification.remove();\n                };\n                actionsDiv.appendChild(button);\n            });\n\n            notification.appendChild(actionsDiv);\n        } else {\n            // Для успешных уведомлений автоматическое скрытие через 5 секунд\n            setTimeout(() => {\n                notification.style.animation = 'slideOut 0.3s ease';\n                setTimeout(() => notification.remove(), 300);\n            }, 7000);\n        }\n\n        document.body.appendChild(notification);\n\n        // Добавляем стили для анимаций, если их еще нет\n        if (!document.getElementById('notification-styles')) {\n            const style = document.createElement('style');\n            style.id = 'notification-styles';\n            style.textContent = `\n                @keyframes slideIn {\n                    from { transform: translateX(120%); opacity: 0; }\n                    to { transform: translateX(0); opacity: 1; }\n                }\n                @keyframes slideOut {\n                    from { transform: translateX(0); opacity: 1; }\n                    to { transform: translateX(120%); opacity: 0; }\n                }\n            `;\n            document.head.appendChild(style);\n        }\n\n        return notification;\n    }\n}\n\nclass TaskManager {\n    constructor() {\n        this.tasks = [];\n        this.currentTaskId = null;\n        this.modalEscapeListener = null;\n        this.loadTheme();\n        this.loadTasks().then(() => {\n            this.init();\n        });\n        this.setupImageHandling();\n    }\n\n    async loadTasks() {\n        try {\n            const response = await fetch('https://script.google.com/macros/s/AKfycby-Fn7_OyTn4iv_LMUwO79-WoDiJoP457UvSrEh5UzlRwW9nKGfRGKkbnXNE3oorLvq/exec');\n            const data = await response.json();\n            \n            // Обрабатываем каждую задачу для получения URL изображения\n            this.tasks = await Promise.all((data.tasks || []).map(async task => {\n                // Если у задачи есть imageId, получаем URL изображения\n                if (task.imageId) {\n                    try {\n                        // Используем прямой URL для изображения\n                        task.imageUrl = `https://i.ibb.co/${task.imageId}/image.jpg`;\n                        console.log(`Image URL set for task ${task.id}:`, task.imageUrl);\n                    } catch (imgError) {\n                        console.error(`Error setting image URL for task ${task.id}:`, imgError);\n                    }\n                }\n                return task;\n            }));\n\n            console.log('Loaded tasks with images:', this.tasks);\n            this.renderTasks();\n        } catch (error) {\n            console.error('Error loading tasks:', error);\n            this.tasks = [];\n        }\n    }\n\n    async saveTasks(task) {\n        try {\n            console.log('Saving task:', task);\n\n            // Подготавливаем данные задачи\n            const taskToSave = {\n                ...task,\n                assignees: task.assignees || ['empty'],\n                subtasks: task.subtasks || [],\n                updatedAt: new Date().toISOString()\n            };\n\n            // Создаем данные для отправки\n            const payload = {\n                tasks: [taskToSave]\n            };\n\n            console.log('Sending payload:', payload);\n\n            // Отправляем запрос\n            const response = await fetch('https://script.google.com/macros/s/AKfycby-Fn7_OyTn4iv_LMUwO79-WoDiJoP457UvSrEh5UzlRwW9nKGfRGKkbnXNE3oorLvq/exec', {\n                method: 'POST',\n                mode: 'no-cors', // Важно для работы с Google Apps Script\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payload)\n            });\n\n            // В режиме no-cors мы не можем прочитать ответ\n            // Поэтому просто возвращаем успех\n            return { success: true };\n\n        } catch (error) {\n            console.error('Error saving task:', error);\n            throw error;\n        }\n    }\n\n    init() {\n        this.setupEventListeners();\n        this.renderTasks();\n        this.setupDragAndDrop();\n        \n        // Добавляем обработчик для тестовой кнопки\n        const testDriveBtn = document.getElementById('testDriveBtn');\n        if (testDriveBtn) {\n            testDriveBtn.addEventListener('click', () => this.testDriveAccess());\n        }\n\n        // Добавляем обработчик тестовой кнопки загрузки изображения\n        const testImageUploadBtn = document.getElementById('testImageUploadBtn');\n        if (testImageUploadBtn) {\n            testImageUploadBtn.addEventListener('click', () => {\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = 'image/*';\n                input.onchange = (e) => {\n                    if (e.target.files.length > 0) {\n                        this.testImageUpload(e.target.files[0]);\n                    }\n                };\n                input.click();\n            });\n        }\n    }\n\n    setupEventListeners() {\n        console.log('Setting up event listeners');\n        \n        const addButton = document.getElementById('addTaskBtn');\n        console.log('Add button:', addButton);\n        \n        addButton.addEventListener('click', () => {\n            console.log('Add button clicked');\n            this.currentTaskId = null;\n            this.showModal();\n        });\n\n        // Закрытие модального окна по клику на крестик\n        document.querySelector('.close').addEventListener('click', () => {\n            this.hideModal();\n        });\n\n        // Обработка формы\n        document.getElementById('taskForm').addEventListener('submit', (e) => {\n            e.preventDefault();\n            this.handleFormSubmit();\n        });\n\n        // Добавляем обработчик для переключения темы\n        document.getElementById('themeToggleBtn').addEventListener('click', () => {\n            this.toggleTheme();\n        });\n\n        // Добавляем обрабтчик для поля номера задачи\n        const taskNumberInput = document.getElementById('taskNumber');\n        taskNumberInput.addEventListener('input', (e) => {\n            this.handleTaskNumberInput(e.target.value);\n        });\n\n        // Закрываем подсказки при клике вне поля\n        document.addEventListener('click', (e) => {\n            if (!e.target.closest('.task-number-container')) {\n                document.getElementById('taskNumberSuggestions').style.display = 'none';\n            }\n        });\n\n        // Добавляем обработчик для кнопки добавления исполнителя\n        document.getElementById('addAssigneeBtn').addEventListener('click', () => {\n            this.addAssigneeField();\n        });\n\n        // Добавлям делегирование событий для кнопок удаления исполнителя\n        document.getElementById('assigneesList').addEventListener('click', (e) => {\n            if (e.target.classList.contains('remove-assignee-btn')) {\n                const assigneeItem = e.target.closest('.assignee-item');\n                if (assigneeItem && document.querySelectorAll('.assignee-item').length > 1) {\n                    assigneeItem.remove();\n                }\n            }\n        });\n\n        // Добавляем обработчик для кнопки обавления подзадачи\n        document.getElementById('addSubtaskBtn').addEventListener('click', () => {\n            this.addSubtaskField();\n        });\n\n        // Добавляем делегирование событий для кнопок  подзаа\n        document.getElementById('subtasksList').addEventListener('click', (e) => {\n            if (e.target.classList.contains('remove-subtask-btn')) {\n                e.target.closest('.subtask-item').remove();\n            }\n        });\n    }\n\n    addAssigneeField() {\n        const assigneesList = document.getElementById('assigneesList');\n        assigneesList.appendChild(this.createAssigneeItem('empty'));\n    }\n\n    addSubtaskField(text = '', completed = false) {\n        const subtasksList = document.getElementById('subtasksList');\n        const subtaskItem = document.createElement('div');\n        subtaskItem.className = 'subtask-item';\n        subtaskItem.innerHTML = `\n            <input type=\"checkbox\" class=\"subtask-checkbox\" ${completed ? 'checked' : ''}>\n            <input type=\"text\" class=\"subtask-text\" value=\"${text}\" placeholder=\"Введите подзадачу\">\n            <button type=\"button\" class=\"remove-subtask-btn\">×</button>\n        `;\n        subtasksList.appendChild(subtaskItem);\n    }\n\n    handleTaskNumberInput(value) {\n        const suggestionsContainer = document.getElementById('taskNumberSuggestions');\n        const input = document.getElementById('taskNumber');\n\n        // Очищаем стили и подсказки если поле путое\n        if (!value) {\n            input.classList.remove('exists', 'available');\n            suggestionsContainer.style.display = 'none';\n            return;\n        }\n\n        // Получаем все существующие номера задач\n        const existingNumbers = this.tasks\n            .map(task => task.taskNumber)\n            .filter(number => number) // Фильтруем undefined и пустые значения\n            .sort((a, b) => a - b);\n\n        // Проверяем существует ли введенный номер\n        const exists = existingNumbers.includes(value);\n        input.classList.toggle('exists', exists);\n        input.classList.toggle('available', !exists && value.length > 0);\n\n        // Показывм похожие номера\n        if (value.length > 0) {\n            const suggestions = existingNumbers\n                .filter(number => number.toString().includes(value))\n                .slice(0, 5); // Показываем только первые 5 совпадений\n\n            if (suggestions.length > 0) {\n                suggestionsContainer.innerHTML = suggestions\n                    .map(number => `\n                        <div class=\"suggestion-item\" onclick=\"window.taskManager.selectTaskNumber('${number}')\">\n                            ${number}\n                        </div>\n                    `)\n                    .join('');\n                suggestionsContainer.style.display = 'block';\n            } else {\n                suggestionsContainer.style.display = 'none';\n            }\n        } else {\n            suggestionsContainer.style.display = 'none';\n        }\n    }\n\n    selectTaskNumber(number) {\n        document.getElementById('taskNumber').value = number;\n        document.getElementById('taskNumberSuggestions').style.display = 'none';\n    }\n\n    showModal(taskId = null) {\n        console.log('Opening modal for taskId:', taskId);\n        console.log('All tasks:', this.tasks);\n\n        const modal = document.getElementById('taskModal');\n        const form = document.getElementById('taskForm');\n        const assigneesList = document.getElementById('assigneesList');\n        const deleteBtn = modal.querySelector('.delete-task-btn');\n        const imagePreview = document.getElementById('taskImagePreview');\n        \n        // Очищаем превью изображения\n        imagePreview.innerHTML = '';\n        \n        // Показываем кнопку удаления только при редактировании\n        deleteBtn.style.display = taskId ? 'block' : 'none';\n        \n        // Очищаем список исполнителей\n        assigneesList.innerHTML = '';\n        \n        const subtasksList = document.getElementById('subtasksList');\n        subtasksList.innerHTML = '';\n        \n        if (taskId) {\n            const task = this.tasks.find(t => String(t.id) === String(taskId));\n            console.log('Found task:', task);\n            \n            if (task) {\n                // Заполняем основные поля\n                form.taskTitle.value = task.title || '';\n                form.taskNumber.value = task.taskNumber || '';\n                form.taskDescription.value = task.description || '';\n                form.taskCategory.value = task.category || 'Must_Have';\n                form.taskPriority.value = task.priorityStatus || 'normal';\n                form.taskStatus.value = task.progressStatus || 'who-take';\n                \n                // Отображаем существующее изображение с ImgBB\n                if (task.imageUrl) {\n                    console.log('Rendering image preview:', task.imageUrl);\n                    const container = document.createElement('div');\n                    container.className = 'preview-container';\n                    container.style.cssText = `\n                        width: 100%;\n                        max-height: 200px;\n                        overflow: hidden;\n                        border-radius: 4px;\n                        position: relative;\n                        margin-top: 10px;\n                    `;\n                    \n                    const img = document.createElement('img');\n                    img.src = task.imageUrl;\n                    img.style.cssText = `\n                        width: 100%;\n                        height: auto;\n                        object-fit: contain;\n                    `;\n                    \n                    const removeBtn = document.createElement('button');\n                    removeBtn.className = 'remove-image-btn';\n                    removeBtn.textContent = '×';\n                    removeBtn.onclick = () => {\n                        task.imageUrl = null;\n                        task.imageId = null;\n                        container.remove();\n                    };\n                    \n                    container.appendChild(img);\n                    container.appendChild(removeBtn);\n                    imagePreview.appendChild(container);\n                }\n                \n                // Обработка исполнителей\n                const assignees = Array.isArray(task.assignees) ? task.assignees : [task.assignee || 'empty'];\n                console.log('Processing assignees:', assignees);\n                assignees.forEach(assignee => {\n                    const assigneeItem = this.createAssigneeItem(assignee);\n                    assigneesList.appendChild(assigneeItem);\n                });\n                \n                // Обработка подзадач\n                if (task.subtasks && Array.isArray(task.subtasks)) {\n                    console.log('Processing subtasks:', task.subtasks);\n                    task.subtasks.forEach(subtask => {\n                        if (typeof subtask === 'string') {\n                            this.addSubtaskField(subtask, false);\n                        } else if (typeof subtask === 'object') {\n                            this.addSubtaskField(subtask.text, subtask.completed);\n                        }\n                    });\n                }\n                \n                this.currentTaskId = taskId;\n            } else {\n                console.error('Task not found:', taskId);\n            }\n        } else {\n            form.reset();\n            form.taskCategory.value = 'Must_Have';\n            assigneesList.appendChild(this.createAssigneeItem('empty'));\n        }\n\n        modal.style.display = 'block';\n        \n        // Добавляем обработчик дя кнопки удаления\n        deleteBtn.onclick = () => this.showDeleteConfirmation(taskId);\n        \n        // Добавляем обработчик Escape\n        this.modalEscapeListener = (e) => {\n            if (e.key === 'Escape') {\n                this.hideModal();\n            }\n        };\n        document.addEventListener('keydown', this.modalEscapeListener);\n\n        // Добавляем обработчик клика вне модального окна\n        modal.addEventListener('click', (e) => {\n            if (e.target === modal) {\n                this.hideModal();\n            }\n        });\n    }\n\n    showDeleteConfirmation(taskId) {\n        const confirmModal = document.getElementById('deleteConfirmModal');\n        confirmModal.style.display = 'block';\n\n        // Обработчик подтверждения удаления\n        const handleConfirm = () => {\n            this.deleteTask(taskId);\n            confirmModal.style.display = 'none';\n            this.hideModal();\n            cleanup();\n        };\n\n        // Обработчик отмены\n        const handleCancel = () => {\n            confirmModal.style.display = 'none';\n            cleanup();\n        };\n\n        // Обработчик клика вне модального окна\n        const handleOutsideClick = (e) => {\n            if (e.target === confirmModal) {\n                confirmModal.style.display = 'none';\n                cleanup();\n            }\n        };\n\n        // Обработчик клавиши Escape\n        const handleEscape = (e) => {\n            if (e.key === 'Escape') {\n                confirmModal.style.display = 'none';\n                cleanup();\n            }\n        };\n\n        // Очистка обработчиков\n        const cleanup = () => {\n            document.getElementById('confirmDelete').removeEventListener('click', handleConfirm);\n            document.getElementById('cancelDelete').removeEventListener('click', handleCancel);\n            confirmModal.removeEventListener('click', handleOutsideClick);\n            document.removeEventListener('keydown', handleEscape);\n        };\n\n        // Добавляем обработчики\n        document.getElementById('confirmDelete').addEventListener('click', handleConfirm);\n        document.getElementById('cancelDelete').addEventListener('click', handleCancel);\n        confirmModal.addEventListener('click', handleOutsideClick);\n        document.addEventListener('keydown', handleEscape);\n    }\n\n    hideModal() {\n        const modal = document.getElementById('taskModal');\n        modal.style.display = 'none';\n        \n        // Удаляем обработчк Escape при закрытии модального окна\n        if (this.modalEscapeListener) {\n            document.removeEventListener('keydown', this.modalEscapeListener);\n            this.modalEscapeListener = null;\n        }\n    }\n\n    async handleFormSubmit() {\n        try {\n            const form = document.getElementById('taskForm');\n            \n            // Собираем данные формы\n            const taskData = {\n                title: form.taskTitle.value,\n                taskNumber: form.taskNumber.value || null,\n                description: form.taskDescription.value,\n                category: form.taskCategory.value,\n                priorityStatus: form.taskPriority.value,\n                progressStatus: form.taskStatus.value,\n                assignees: Array.from(form.querySelectorAll('.taskAssignee'))\n                    .map(select => select.value)\n                    .filter(value => value) || ['empty'],\n                subtasks: Array.from(form.querySelectorAll('.subtask-item')).map(item => ({\n                    id: Date.now() + Math.random().toString(36).substr(2, 9),\n                    text: item.querySelector('.subtask-text').value,\n                    completed: item.querySelector('.subtask-checkbox').checked\n                }))\n            };\n\n            // Если есть новое изображение, загружаем его на ImgBB\n            if (this.currentImage) {\n                try {\n                    const imageResult = await this.uploadImage(this.currentImage);\n                    if (imageResult && imageResult.success) {\n                        taskData.imageUrl = imageResult.url;\n                        taskData.imageId = imageResult.id;\n                    }\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                    Notification.show('Ошибка при загрузке изображения', 'error');\n                }\n            }\n\n            // Сразу закрываем модальное окно\n            this.hideModal();\n\n            if (this.currentTaskId) {\n                await this.updateTask(this.currentTaskId, taskData);\n            } else {\n                await this.addTask(taskData);\n            }\n\n            // Очищаем текущее изображение\n            this.currentImage = null;\n            document.getElementById('taskImagePreview').innerHTML = '';\n\n        } catch (error) {\n            console.error('Error in handleFormSubmit:', error);\n            Notification.show('Произошла ошибка', 'error');\n        }\n    }\n\n    async uploadImage(file) {\n        try {\n            console.log('Starting image upload to ImgBB...');\n            \n            const formData = new FormData();\n            formData.append('image', file);\n            formData.append('key', IMGBB_API_KEY);\n\n            const response = await fetch('https://api.imgbb.com/1/upload', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (!response.ok) {\n                throw new Error(`Upload failed: ${response.statusText}`);\n            }\n\n            const result = await response.json();\n            console.log('ImgBB response:', result);\n\n            if (result.success) {\n                return {\n                    success: true,\n                    id: result.data.id,\n                    url: result.data.url,\n                    delete_url: result.data.delete_url,\n                    thumbnail: result.data.thumb.url\n                };\n            } else {\n                throw new Error(result.error?.message || 'Upload failed');\n            }\n        } catch (error) {\n            console.error('Error uploading to ImgBB:', error);\n            throw error;\n        }\n    }\n\n    // Добавим тестовый метод\n    async testImageUpload(file) {\n        try {\n            console.log('Starting test image upload...');\n            const result = await this.uploadImage(file);\n            console.log('Test upload result:', result);\n            Notification.show(`\n                Изображение успешно загружено!<br>\n                ID: ${result.id}<br>\n                URL: <a href=\"${result.url}\" target=\"_blank\">Открыть изображение</a>\n            `);\n            return result;\n        } catch (error) {\n            console.error('Test image upload failed:', error);\n            Notification.show(`❌ Ошибка зарузки: ${error.message}`, 'error');\n            throw error;\n        }\n    }\n\n    // Вспомогательный метод для конвертации файла в base64\n    fileToBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n            reader.readAsDataURL(file);\n        });\n    }\n\n    async addTask(taskData) {\n        try {\n            const generateUniqueId = () => {\n                const timestamp = Date.now();\n                const random = Math.floor(Math.random() * 10000);\n                return `${timestamp}-${random}`;\n            };\n\n            let taskId;\n            do {\n                taskId = generateUniqueId();\n            } while (this.tasks.some(task => task.id === taskId));\n\n            const task = {\n                id: taskId,\n                taskNumber: taskData.taskNumber || null,\n                title: taskData.title,\n                description: taskData.description,\n                category: taskData.category || 'Must_Have',\n                priorityStatus: taskData.priorityStatus,\n                progressStatus: taskData.progressStatus,\n                assignees: taskData.assignees,\n                subtasks: taskData.subtasks || [],\n                createdAt: new Date().toISOString(),\n                updatedAt: new Date().toISOString()\n            };\n\n            // Сначала сохраняем задачу без изображения\n            await this.saveTasks(task);\n            \n            // Если есть изображение, загружаем его отдельно\n            if (this.currentImage) {\n                try {\n                    const imageResult = await this.uploadImage(this.currentImage);\n                    if (imageResult && imageResult.success) {\n                        task.imageId = imageResult.id;\n                        task.imageUrl = imageResult.url;\n                        task.imageThumbnail = imageResult.thumbnail;\n                    }\n                } catch (error) {\n                    console.error('Error uploading image:', error);\n                    Notification.show('Ошибка при загрузке изображения', 'error');\n                    // Продолжаем выполнение даже если загрузка изображения не удалась\n                }\n            }\n\n            this.tasks.push(task);\n            this.renderTasks();\n            this.hideModal();\n            \n            // Очищаем текущее изображение\n            this.currentImage = null;\n            document.getElementById('taskImagePreview').innerHTML = '';\n            \n            Notification.show('Задача успешно создана');\n            \n        } catch (error) {\n            console.error('Error in addTask:', error);\n            Notification.show('Ошибка при создании задачи', 'error');\n            throw error;\n        }\n    }\n\n    async updateTask(taskId, taskData) {\n        try {\n            const index = this.tasks.findIndex(t => String(t.id) === String(taskId));\n            if (index !== -1) {\n                const oldTask = this.tasks[index];\n                \n                const updatedTask = {\n                    ...oldTask,\n                    ...taskData,\n                    updatedAt: new Date().toISOString()\n                };\n\n                // Если есть новое изображение\n                if (this.currentImage) {\n                    try {\n                        const imageResult = await this.uploadImage(this.currentImage);\n                        if (imageResult && imageResult.id) {\n                            updatedTask.imageId = imageResult.id;\n                        }\n                    } catch (error) {\n                        console.error('Error uploading image:', error);\n                        Notification.show('Ошибка при загрузке изображения', 'error');\n                    }\n                }\n\n                // Отправляем запрос на обновление\n                const response = await fetch('https://script.google.com/macros/s/AKfycby-Fn7_OyTn4iv_LMUwO79-WoDiJoP457UvSrEh5UzlRwW9nKGfRGKkbnXNE3oorLvq/exec', {\n                    method: 'POST',\n                    mode: 'no-cors',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ tasks: [updatedTask] })\n                });\n\n                // Обновляем локальное состояние\n                this.tasks[index] = updatedTask;\n                this.renderTasks();\n                \n                // Очищаем екущее изображение\n                this.currentImage = null;\n                document.getElementById('taskImagePreview').innerHTML = '';\n                \n                Notification.show('Задача успешно обновлена');\n\n            } else {\n                throw new Error('Task not found: ' + taskId);\n            }\n        } catch (error) {\n            console.error('Error updating task:', error);\n            throw error;\n        }\n    }\n\n    async deleteTaskOnServer(taskId) {\n        try {\n            const response = await fetch('https://script.google.com/macros/s/AKfycby-Fn7_OyTn4iv_LMUwO79-WoDiJoP457UvSrEh5UzlRwW9nKGfRGKkbnXNE3oorLvq/exec', {\n                method: 'POST',\n                mode: 'no-cors',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ \n                    tasks: [],\n                    action: 'delete',\n                    taskId: taskId \n                })\n            });\n            \n            // В режиме no-cors мы не можем прочитать ответ\n            // Поэтому просто возвращаем успешный результат\n            return { success: true };\n        } catch (error) {\n            console.error('Error in deleteTaskOnServer:', error);\n            throw error;\n        }\n    }\n\n    async deleteTask(taskId) {\n        try {\n            const task = this.tasks.find(t => t.id === taskId);\n            if (!task) {\n                throw new Error('Task not found');\n            }\n\n            // Сначала удаляем локально\n            this.tasks = this.tasks.filter(t => t.id !== taskId);\n            this.renderTasks();\n            \n            // Затем отправляем запрос на сервер\n            await this.deleteTaskOnServer(taskId);\n            \n            const truncatedTitle = task.title.length > 15 ? \n                task.title.substring(0, 15) + '...' : \n                task.title;\n            Notification.show(`Задача \"${truncatedTitle}\" удалена`);\n            \n            // Закрываем модальное окно\n            this.hideModal();\n        } catch (error) {\n            console.error('Error deleting task:', error);\n            Notification.show('Ошибка при удалении задачи', 'error');\n            \n            // В случае ошибки восстанавливаем задачу локально\n            if (task) {\n                this.tasks.push(task);\n                this.renderTasks();\n            }\n        }\n    }\n\n    renderTasks() {\n        this.renderImagesGallery();\n        this.renderCompactGrid();\n        // Очищаем все зоны\n        document.querySelectorAll('.drop-zone').forEach(zone => {\n            zone.innerHTML = '';\n        });\n\n        // Отрисовываем задачи в основной таблице\n        this.tasks.forEach(task => {\n            // Проверяем и конвертируем старый формат в новый\n            if (!task.assignees && task.assignee) {\n                task.assignees = [task.assignee];\n                delete task.assignee;\n            }\n            \n            // Проверяем, есть ли среди исполнителей кто-то кроме Empty\n            const hasNonEmptyAssignee = task.assignees.some(assignee => assignee !== 'empty');\n            \n            // Создаем элемент задачи только если есть не-Empty исполнитель\n            if (hasNonEmptyAssignee) {\n                console.log('Rendering task with image:', task.imageUrl);\n                const taskElement = this.createTaskElement(task);\n                const dropZone = document.querySelector(\n                    `.drop-zone[data-priority=\"${task.priorityStatus}\"][data-status=\"${task.progressStatus}\"]`\n                );\n                if (dropZone) {\n                    dropZone.appendChild(taskElement);\n                }\n            }\n        });\n\n        // Отрисовываем Must Have задачи (включая Empty)\n        const mustHaveGrid = document.querySelector('.must-have-grid');\n        if (mustHaveGrid) {\n            mustHaveGrid.innerHTML = '';\n            const mustHaveTasks = this.tasks.filter(task => task.category === 'Must_Have');\n            const mustHaveByAssignee = this.groupTasksByAssignee(mustHaveTasks, true);\n            this.renderGroupedTasks(mustHaveByAssignee, mustHaveGrid);\n        }\n\n        // Отрисовываем Upgrade задачи (включая Empty)\n        const upgradeGrid = document.querySelector('.upgrade-grid');\n        if (upgradeGrid) {\n            upgradeGrid.innerHTML = '';\n            const upgradeTasks = this.tasks.filter(task => task.category === 'Upgrade');\n            const upgradeByAssignee = this.groupTasksByAssignee(upgradeTasks, true);\n            this.renderGroupedTasks(upgradeByAssignee, upgradeGrid);\n        }\n    }\n\n    createTaskElement(task) {\n        const div = document.createElement('div');\n        div.className = 'task-card';\n        div.draggable = true;\n        div.dataset.taskId = task.id;\n        \n        // Фильтруем исполнителей, исключая Empty\n        const nonEmptyAssignees = (task.assignees || [task.assignee || 'empty'])\n            .filter(assignee => assignee !== 'empty');\n        \n        // Форматируем номер задачи\n        const taskNumber = task.taskNumber ? `№ ${task.taskNumber}` : '№ ***';\n        \n        // Добавляем разметку для изображения, если оно есть\n        const imageHtml = task.imageUrl ? `\n            <div class=\"task-image\">\n                <img src=\"${task.imageUrl}\" alt=\"Task image\" style=\"\n                    max-width: 100%;\n                    max-height: 150px;\n                    object-fit: contain;\n                    border-radius: 4px;\n                    margin-top: 8px;\n                \">\n            </div>\n        ` : '';\n        \n        div.innerHTML = `\n            <div class=\"task-card-header\">\n                <div class=\"task-left\">\n                    <h4 class=\"task-title\">${task.title}</h4>\n                    <div class=\"task-number\">${taskNumber}</div>\n                    <p class=\"task-description\">${task.description}</p>\n                    ${imageHtml}\n                </div>\n                <div class=\"task-right\">\n                    <div class=\"assignees-list\">\n                        ${nonEmptyAssignees.map(assignee => `\n                            <div class=\"assignee-badge\">${assignee}</div>\n                        `).join('')}\n                    </div>\n                    <div class=\"task-status-badge\">${task.progressStatus}</div>\n                    <div class=\"category-badge\" data-category=\"${task.category}\">${task.category}</div>\n                </div>\n            </div>\n        `;\n\n        // Добавляем отображение прогресса подзадач\n        if (task.subtasks?.length > 0) {\n            const completed = task.subtasks.filter(st => st.completed).length;\n            const total = task.subtasks.length;\n            div.querySelector('.task-left').insertAdjacentHTML('beforeend', `\n                <div class=\"subtasks-progress\">\n                    ${completed}/${total}\n                </div>\n            `);\n        }\n\n        div.addEventListener('click', () => this.showModal(task.id));\n        return div;\n    }\n\n    setupDragAndDrop() {\n        console.log('Setting up drag and drop');\n        \n        document.addEventListener('dragstart', (e) => {\n            if (e.target.classList.contains('task-card')) {\n                e.target.classList.add('dragging');\n                e.dataTransfer.setData('text/plain', e.target.dataset.taskId);\n            }\n        });\n\n        document.addEventListener('dragend', (e) => {\n            if (e.target.classList.contains('task-card')) {\n                e.target.classList.remove('dragging');\n            }\n        });\n\n        const dropZones = document.querySelectorAll('.drop-zone');\n        dropZones.forEach(zone => {\n            zone.addEventListener('dragover', (e) => {\n                e.preventDefault();\n                zone.classList.add('dragover');\n            });\n\n            zone.addEventListener('dragleave', () => {\n                zone.classList.remove('dragover');\n            });\n\n            zone.addEventListener('drop', async (e) => {\n                e.preventDefault();\n                zone.classList.remove('dragover');\n                \n                const taskId = e.dataTransfer.getData('text/plain');\n                const taskIndex = this.tasks.findIndex(t => String(t.id) === String(taskId));\n                \n                if (taskIndex !== -1) {\n                    const taskElement = document.querySelector(`[data-task-id=\"${taskId}\"]`);\n                    if (taskElement) {\n                        zone.appendChild(taskElement);\n                    }\n\n                    const updatedTask = {\n                        ...this.tasks[taskIndex],\n                        priorityStatus: zone.dataset.priority,\n                        progressStatus: zone.dataset.status,\n                        updatedAt: new Date().toISOString()\n                    };\n\n                    try {\n                        // Обновляем UI сразу\n                        this.tasks[taskIndex] = updatedTask;\n                        \n                        // Сохраняем изменения\n                        await this.saveTasks(updatedTask);\n                        \n                        // Показываем уведомление об успехе\n                        const truncatedTitle = updatedTask.title.length > 15 ? \n                            updatedTask.title.substring(0, 15) + '...' : \n                            updatedTask.title;\n                        const assignee = updatedTask.assignees.filter(a => a !== 'empty')[0] || 'не назначен';\n                        \n                        Notification.show(\n                            `Задача \"${truncatedTitle}\" перемещена\\n` +\n                            `Исполнитель: ${assignee}\\n` +\n                            `Номер: ${updatedTask.taskNumber || 'не присвоен'}`\n                        );\n                    } catch (error) {\n                        console.error('Error saving task:', error);\n                        // Возвращаем предыдущее состояние при ошибке\n                        this.tasks[taskIndex] = { ...this.tasks[taskIndex] };\n                        this.renderTasks();\n                        Notification.show('Ошибка при сохранении позиции', 'error');\n                    }\n                }\n            });\n        });\n    }\n\n    loadTheme() {\n        const savedTheme = localStorage.getItem('theme') || 'dark';\n        document.documentElement.setAttribute('data-theme', savedTheme);\n    }\n\n    toggleTheme() {\n        const currentTheme = document.documentElement.getAttribute('data-theme');\n        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n        document.documentElement.setAttribute('data-theme', newTheme);\n        localStorage.setItem('theme', newTheme);\n    }\n\n    // Обновленный метод groupTasksByAssignee с параметром includeEmpty\n    groupTasksByAssignee(tasks, includeEmpty = false) {\n        const grouped = {};\n        tasks.forEach(task => {\n            const assignees = task.assignees || [task.assignee || 'empty'];\n            assignees.forEach(assignee => {\n                // Включаем Empty только если includeEmpty = true\n                if (assignee !== 'empty' || includeEmpty) {\n                    if (!grouped[assignee]) {\n                        grouped[assignee] = [];\n                    }\n                    if (!grouped[assignee].includes(task)) {\n                        grouped[assignee].push(task);\n                    }\n                }\n            });\n        });\n        return grouped;\n    }\n\n    // Обновим метод renderGroupedTasks для поддержки множественных исполнителей\n    renderGroupedTasks(groupedTasks, container) {\n        Object.entries(groupedTasks).forEach(([assignee, tasks]) => {\n            // Создаем колонку с исполнителем\n            const assigneeColumn = document.createElement('div');\n            assigneeColumn.className = 'task-assignee';\n            assigneeColumn.innerHTML = `\n                <div class=\"assignee-name ${assignee === 'empty' ? 'empty-assignee' : ''}\">\n                    ${assignee}\n                </div>\n                ${tasks.map(task => `\n                    <div class=\"task-status\" data-task-id=\"${task.id}\">${task.progressStatus}</div>\n                `).join('')}\n            `;\n\n            assigneeColumn.addEventListener('click', (e) => {\n                const taskId = e.target.dataset.taskId;\n                if (taskId) {\n                    this.showModal(taskId);\n                }\n            });\n            container.appendChild(assigneeColumn);\n\n            // Создаем колонку с задачами\n            const tasksColumn = document.createElement('div');\n            tasksColumn.className = 'task-content';\n            tasksColumn.innerHTML = tasks.map(task => `\n                <div class=\"task-item\" data-task-id=\"${task.id}\">\n                    <h4>${task.title}</h4>\n                    <div class=\"task-assignees\">\n                        ${(task.assignees || [task.assignee || 'empty']).map(a => `\n                            <span class=\"assignee-badge\">${a}</span>\n                        `).join('')}\n                    </div>\n                    <p>${task.description}</p>\n                    ${task.imageUrl ? `\n                        <div class=\"task-image\">\n                            <img src=\"${task.imageUrl}\" alt=\"Task image\" style=\"\n                                max-width: 100%;\n                                max-height: 150px;\n                                object-fit: contain;\n                                border-radius: 4px;\n                                margin-top: 8px;\n                            \">\n                        </div>\n                    ` : ''}\n                </div>\n            `).join('');\n\n            tasksColumn.addEventListener('click', (e) => {\n                const taskItem = e.target.closest('.task-item');\n                if (taskItem) {\n                    const taskId = taskItem.dataset.taskId;\n                    this.showModal(taskId);\n                }\n            });\n            container.appendChild(tasksColumn);\n        });\n    }\n\n    createAssigneeSelect() {\n        return `\n            <select class=\"taskAssignee\" required>\n                <option value=\"empty\">Empty</option>\n                <option value=\"Andrii Sushylnikov\">Andrii Sushylnikov</option>\n                <option value=\"Daria Honcharuk\">Daria Honcharuk</option>\n                <option value=\"Dmytro Mayevsky\">Dmytro Mayevsky</option>\n                <option value=\"Maks Ki\">Maks Ki</option>\n                <option value=\"Mariia Sv.\">Mariia Sv.</option>\n                <option value=\"Roman Turas\">Roman Turas</option>\n                <option value=\"Viktoriia Didenko\">Viktoriia Didenko</option>\n                <option value=\"Hryhorii Chernysh\">Hryhorii Chernysh (Mentor)</option>\n                <option value=\"Daria\">Daria (client manager)</option>\n                <option value=\"Lesya Katanova\">Lesya Katanova</option>\n                <option value=\"Olena Deineha\">Olena Deineha</option>\n            </select>\n        `;\n    }\n\n    createAssigneeItem(selectedValue = 'empty') {\n        const div = document.createElement('div');\n        div.className = 'assignee-item';\n        div.innerHTML = `\n            ${this.createAssigneeSelect()}\n            <button type=\"button\" class=\"remove-assignee-btn\">×</button>\n        `;\n        div.querySelector('select').value = selectedValue;\n        return div;\n    }\n\n    setupImageHandling() {\n        const addImageBtn = document.getElementById('addImageBtn');\n        const imageInput = document.getElementById('taskImageInput');\n        const imagePreview = document.getElementById('taskImagePreview');\n\n        addImageBtn.addEventListener('click', () => {\n            imageInput.click();\n        });\n\n        imageInput.addEventListener('change', async (e) => {\n            const file = e.target.files[0];\n            if (file) {\n                try {\n                    const preview = await this.previewImage(file);\n                    imagePreview.innerHTML = `\n                        <div class=\"preview-container\">\n                            <img src=\"${preview}\" alt=\"Preview\">\n                            <button class=\"remove-image-btn\" onclick=\"taskManager.removeImage()\">×</button>\n                        </div>\n                    `;\n                    this.currentImage = file;\n                } catch (error) {\n                    console.error('Error previewing image:', error);\n                    Notification.show('Ошибка при загрузке изображения', 'error');\n                }\n            }\n        });\n    }\n\n    previewImage(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => resolve(e.target.result);\n            reader.onerror = reject;\n            reader.readAsDataURL(file);\n        });\n    }\n\n    removeImage() {\n        const imagePreview = document.getElementById('taskImagePreview');\n        imagePreview.innerHTML = '';\n        this.currentImage = null;\n        document.getElementById('taskImageInput').value = '';\n    }\n\n    renderImagesGallery() {\n        const galleryContainer = document.getElementById('taskImagesGrid');\n        if (!galleryContainer) return;\n\n        galleryContainer.innerHTML = '';\n        \n        // Устанавливаем стили для контейнера галереи\n        galleryContainer.style.cssText = `\n            display: flex;\n            flex-wrap: wrap;\n            gap: 10px;\n            padding: 20px;\n            width: 100%;\n            max-width: calc(100% - 40px);\n            margin: 0 auto 20px;\n            background: var(--secondary-background);\n            border-radius: 8px;\n            overflow-x: auto;\n        `;\n        \n        const images = this.tasks\n            .filter(task => task.imageUrl)\n            .map(task => ({\n                url: task.imageUrl,\n                taskId: task.id,\n                taskTitle: task.title,\n                assignees: task.assignees?.filter(a => a !== 'empty') || []\n            }));\n\n        images.forEach(image => {\n            const container = document.createElement('div');\n            container.className = 'gallery-image-container';\n            container.style.cssText = `\n                flex: 0 0 120px;\n                height: 160px;\n                border-radius: 4px;\n                cursor: pointer;\n                position: relative;\n                transition: transform 0.2s;\n                background: rgba(0, 0, 0, 0.05);\n                padding: 8px;\n                display: flex;\n                flex-direction: column;\n            `;\n            \n            // Обрезаем заголовок до 15 символов\n            const truncatedTitle = image.taskTitle.length > 15 \n                ? image.taskTitle.substring(0, 15) + '...' \n                : image.taskTitle;\n            \n            // Добавляем заголовок\n            const title = document.createElement('div');\n            title.style.cssText = `\n                text-align: center;\n                font-size: 12px;\n                font-weight: bold;\n                margin-bottom: 4px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            `;\n            title.textContent = truncatedTitle;\n            title.title = image.taskTitle; // Полный текст в подсказке\n            \n            // Контейнер для изображения\n            const imgContainer = document.createElement('div');\n            imgContainer.style.cssText = `\n                flex: 1;\n                overflow: hidden;\n                border-radius: 4px;\n                margin: 4px 0;\n            `;\n            \n            const img = document.createElement('img');\n            img.src = image.url;\n            img.style.cssText = `\n                width: 100%;\n                height: 100%;\n                object-fit: cover;\n            `;\n            \n            // Обрезаем список исполнителей до 25 символов\n            const assigneesText = image.assignees.join(', ');\n            const truncatedAssignees = assigneesText.length > 25 \n                ? assigneesText.substring(0, 25) + '...' \n                : assigneesText;\n            \n            // Добавляем имена исполнителей\n            const assignees = document.createElement('div');\n            assignees.style.cssText = `\n                text-align: right;\n                font-size: 11px;\n                color: var(--text-secondary);\n                margin-top: 4px;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n            `;\n            assignees.textContent = truncatedAssignees || 'Нет исполнителя';\n            assignees.title = assigneesText; // Полный текст в подсказке\n            \n            // Эффекты при наведении\n            container.onmouseover = () => {\n                container.style.transform = 'scale(1.05)';\n            };\n            container.onmouseout = () => {\n                container.style.transform = 'scale(1)';\n            };\n            \n            container.onclick = () => this.showModal(image.taskId);\n            \n            imgContainer.appendChild(img);\n            container.appendChild(title);\n            container.appendChild(imgContainer);\n            container.appendChild(assignees);\n            galleryContainer.appendChild(container);\n        });\n\n        // Если нет изображений, скрываем галерею\n        galleryContainer.style.display = images.length ? 'flex' : 'none';\n    }\n\n    // Добавим метод для тестирования доступа к Drive\n    async testDriveAccess() {\n        try {\n            const response = await fetch(`https://api.imgbb.com/1/upload?key=${IMGBB_API_KEY}`, {\n                method: 'GET'\n            });\n            \n            if (response.ok) {\n                console.log('ImgBB connection OK');\n                return true;\n            } else {\n                throw new Error('ImgBB connection failed');\n            }\n        } catch (error) {\n            console.error('ImgBB test error:', error);\n            throw error;\n        }\n    }\n\n    renderCompactGrid() {\n        const gridContainer = document.getElementById('tasksCompactGrid');\n        if (!gridContainer) return;\n\n        gridContainer.innerHTML = '';\n        \n        // Получаем все задачи и раз��еляем их на активные и пустые\n        const sortedTasks = [...this.tasks].sort((a, b) => {\n            const numA = parseInt(a.taskNumber) || 0;\n            const numB = parseInt(b.taskNumber) || 0;\n            return numA - numB;\n        });\n\n        // Разделяем задачи на две группы\n        const activeTasks = sortedTasks.filter(task => \n            task.assignees?.some(assignee => assignee !== 'empty')\n        );\n        \n        const emptyTasks = sortedTasks.filter(task => \n            !task.assignees?.some(assignee => assignee !== 'empty')\n        );\n\n        // Сначала добавляем активные задачи\n        activeTasks.forEach(task => {\n            const taskElement = document.createElement('div');\n            taskElement.className = 'compact-task-item';\n            \n            // Номер задачи\n            const number = document.createElement('span');\n            number.className = 'compact-task-number';\n            number.textContent = task.taskNumber ? `№${task.taskNumber}` : '№***';\n            \n            // Иконка изображения\n            const imageIcon = document.createElement('span');\n            imageIcon.className = 'compact-task-image-icon';\n            imageIcon.textContent = task.imageUrl ? '🖼️' : '👽';\n            \n            // Заголовок задачи\n            const title = document.createElement('span');\n            title.className = 'compact-task-title';\n            title.textContent = task.title.length > 15 \n                ? task.title.substring(0, 15) + '...' \n                : task.title;\n            title.title = task.title;\n            \n            // Статус\n            const status = document.createElement('span');\n            status.className = 'compact-task-status';\n            if (task.progressStatus === 'done') {\n                status.textContent = '✅';\n            } else {\n                status.textContent = '🔨';\n            }\n            \n            taskElement.appendChild(number);\n            taskElement.appendChild(imageIcon);\n            taskElement.appendChild(title);\n            taskElement.appendChild(status);\n            \n            taskElement.addEventListener('click', () => this.showModal(task.id));\n            \n            gridContainer.appendChild(taskElement);\n        });\n\n        // Затем добавляем пустые задачи\n        emptyTasks.forEach(task => {\n            const taskElement = document.createElement('div');\n            taskElement.className = 'compact-task-item empty-task';\n            \n            const number = document.createElement('span');\n            number.className = 'compact-task-number';\n            number.textContent = task.taskNumber ? `№${task.taskNumber}` : '№***';\n            \n            // Иконка изображения\n            const imageIcon = document.createElement('span');\n            imageIcon.className = 'compact-task-image-icon';\n            imageIcon.textContent = task.imageUrl ? '🖼️' : '👽';\n            \n            const title = document.createElement('span');\n            title.className = 'compact-task-title';\n            title.textContent = task.title.length > 15 \n                ? task.title.substring(0, 15) + '...' \n                : task.title;\n            title.title = task.title;\n            \n            taskElement.appendChild(number);\n            taskElement.appendChild(imageIcon);\n            taskElement.appendChild(title);\n            \n            taskElement.addEventListener('click', () => this.showModal(task.id));\n            \n            gridContainer.appendChild(taskElement);\n        });\n    }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const imagePreview = document.getElementById('taskImagePreview');\n    const fullscreenContainer = document.getElementById('fullscreenImageContainer');\n    const fullscreenImage = document.getElementById('fullscreenImage');\n\n    imagePreview.addEventListener('click', (e) => {\n        if (e.target.tagName === 'IMG') {\n            fullscreenImage.src = e.target.src;\n            fullscreenContainer.style.display = 'flex';\n        }\n    });\n\n    fullscreenContainer.addEventListener('click', () => {\n        fullscreenContainer.style.display = 'none';\n    });\n});\n// Испрви инициализацию\ndocument.addEventListener('DOMContentLoaded', () => {\n    window.taskManager = new TaskManager();\n}); "],"names":["IMGBB_API_KEY","Notification","message","type","actions","notification","actionsDiv","action","button","style","TaskManager","data","task","imgError","error","payload","response","testDriveBtn","testImageUploadBtn","input","e","addButton","assigneeItem","text","completed","subtasksList","subtaskItem","value","suggestionsContainer","existingNumbers","number","a","b","exists","suggestions","taskId","modal","form","assigneesList","deleteBtn","imagePreview","t","container","img","removeBtn","assignees","assignee","subtask","confirmModal","handleConfirm","cleanup","handleCancel","handleOutsideClick","handleEscape","taskData","select","item","imageResult","file","_a","formData","result","resolve","reject","reader","generateUniqueId","timestamp","random","index","updatedTask","truncatedTitle","zone","taskElement","dropZone","mustHaveGrid","mustHaveTasks","mustHaveByAssignee","upgradeGrid","upgradeTasks","upgradeByAssignee","div","nonEmptyAssignees","taskNumber","imageHtml","st","total","taskIndex","savedTheme","newTheme","tasks","includeEmpty","grouped","groupedTasks","assigneeColumn","tasksColumn","taskItem","selectedValue","addImageBtn","imageInput","preview","galleryContainer","images","image","title","imgContainer","assigneesText","truncatedAssignees","gridContainer","sortedTasks","numA","numB","activeTasks","emptyTasks","imageIcon","status","fullscreenContainer","fullscreenImage"],"mappings":"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"}